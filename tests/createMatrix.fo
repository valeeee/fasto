fun  int  writeInt  ( int i ) = 
        let s = write ("\t") in
        let y = write (i) in 
        let z = write ("\t") in y
fun  int  readInt   ( int i ) = read(int) //
fun [int] readIntArr( int n ) = map (readInt, iota(n)) 
fun [int] writeIntArr([int] x) = map(writeInt, x)

fun [[int]] createMatrix (int r,int c) = 
        map (fn [int] (int x) => readIntArr (c), iota(r)) 


fun [[int]] insert () = 
    let y = write  ("insert number of rows: \n") in 
    let r = read(int) in 
    let z = write ("insert number of columns: \n") in 
    let c = read(int) in
    let val = write ("insert values:\n") in 
    createMatrix(r,c)

fun [[int]] writeMMInt([[int]] n) = map(writeMInt, n)

fun [int] writeMInt([int] n) = 
        let x = write("\n ") in 
        let y = map(writeInt, n) in
        let z = write (" \n") in y


fun [[int]] main () = 
        
       insert()